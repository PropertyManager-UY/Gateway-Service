name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Run Tests"]  # Nombre del flujo de trabajo que debe completarse
    types:
      - completed

jobs:
  build-and-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Solo ejecutar si las pruebas fueron exitosas
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_TAG: "latest"
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      K8_NAMESPACE: "property-manager"
      K8_DEPLOYMENT: "gateway-deployment"
      SERVICE_NAME: "gateway-service"
      K8_APP: "gateway"
      SERVER_KUBE_CONFIG: ${{ secrets.SERVER_KUBE_CONFIG }}
      DEPLOYMENT_DIR: ${{ secrets.DEPLOYMENT_DIR }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Create SSH directory
      run: mkdir -p ~/.ssh && chmod 700 ~/.ssh

    - name: Check and add host key to known_hosts
      run: ssh-keyscan -H 109.199.116.12 >> ~/.ssh/known_hosts

    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build and Push Docker Image
      run: |
        docker build -t $DOCKER_USERNAME/property_manager.$SERVICE_NAME:$DOCKER_IMAGE_TAG .
        docker push $DOCKER_USERNAME/property_manager.$SERVICE_NAME:$DOCKER_IMAGE_TAG

    - name: Set up SSH for remote server access
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy Kubernetes manifests to server
      run: |
        scp -r .deploy/kubernetes ${{ secrets.USERNAME }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOYMENT_DIR }}/deployment-$K8_APP

    - name: Update Kubernetes Deployment
      run: |
        ssh ${{ secrets.USERNAME }}@${{ secrets.SERVER_IP }} << EOF
          export KUBECONFIG=${{ secrets.SERVER_KUBE_CONFIG }}
          kubectl create namespace $K8_NAMESPACE || true
          kubectl set image deployment/$K8_DEPLOYMENT $K8_APP=$DOCKER_USERNAME/property_manager.$SERVICE_NAME:$DOCKER_IMAGE_TAG --namespace $K8_NAMESPACE
          kubectl apply -f ${{ secrets.DEPLOYMENT_DIR }}/deployment-$K8_APP --namespace $K8_NAMESPACE
          rm -rf ${{ secrets.DEPLOYMENT_DIR }}/deployment-$K8_APP
        EOF
